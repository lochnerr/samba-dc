#!/bin/sh

# Utility functions for starting and stopping samba processes.

# Because this implementation is compatible with Fedora, Ubuntu and Alpine Linux running with 
# or without an init system, these functions are not nearly as straightforward as they would
# be supporting only a single distro.

set_or_append_option() {

  # Set or append an option value in a config file.

  if grep "${2}=" $1 >/dev/null 2>&1 ; then
    # Replace existing option in file.
    sed -i "s@.*${2}=.*@${2}=\"$3\"@" $1
  else
    # Append missing option to file.
    echo "${2}=\"$3\"" >>$1
  fi
}

set_service_options() {

  # When running in Docker, the init configuration files are not persistent and must be
  # updated on each docker run.

  case $ID in
  fedora)
    set_or_append_option /etc/sysconfig/samba SAMBAOPTIONS   "$SAMBAOPTIONS"
    set_or_append_option /etc/sysconfig/named OPTIONS        "$NAMEDOPTIONS"
    set_or_append_option /etc/sysconfig/named KRB5RCACHETYPE "none"
    ;;
  ubuntu)
    set_or_append_option /etc/default/samba   SAMBAOPTIONS   "$SAMBAOPTIONS"
    [ -z "$(echo '$NAMEDOPTIONS' | grep '-u' - 2>/dev/null || :)" ] && NAMEDOPTIONS="-u $BIND_USER $NAMEDOPTIONS"
    set_or_append_option /etc/default/bind9   OPTIONS        "$NAMEDOPTIONS"
    echo "Unmasking samba-ad-dc service."
    systemctl unmask samba-ad-dc 2>/dev/null || :
    ;;
  alpine)
    set_or_append_option /etc/conf.d/samba    samba_options  "$SAMBAOPTIONS"
    set_or_append_option /etc/conf.d/named    OPTS           "$NAMEDOPTIONS"
    set_or_append_option /etc/conf.d/samba    daemon_list    "samba"
    ;;
  esac
}

start_service() {

  if [ "$SYSINIT" = "true" ]; then
    echo "Starting $1 service."
    if [ "$ID" = "alpine" ]; then
      /sbin/rc-service $1 start
    else
      if [ "$ID" = "ubuntu" ]; then
        [ "$1" = "samba" ] && svc="samba-ad-dc"
        [ "$1" = "named" ] && svc="bind9"
      fi 
      systemctl start ${svc:-$1}
    fi
  else
    echo "Starting $1 process."
    opts="" 
    [ "$1" = "samba" ] && opts="--no-process-group $SAMBAOPTIONS"
    [ "$1" = "named" ] && opts="-u $BIND_USER $NAMEDOPTIONS"
    # Temporary code for Alpine testing.
    [ "$ID" = "alpine" -a "$1" = "named" ] && svc="/usr/bin/valgrind --trace-children=yes --log-file=/root/named-vg.txt $1"
    if ! ${svc:-$1} $opts ; then
      echo "Error: $1 process failed to start."
    fi
  fi
}

stop_service() {

  if [ "$SYSINIT" = "true" ]; then
    echo "Stopping $1 service."
    if [ "$ID" = "alpine" ]; then
      /sbin/rc-service $1 stop || :
    else
      if [ "$ID" = "ubuntu" ]; then
        [ "$1" = "samba" ] && svc="samba-ad-dc"
        [ "$1" = "named" ] && svc="bind9"
      fi
      systemctl stop ${svc:-$1} || :
    fi
  else
    pidfile="/run/$1/$1.pid"
    [ -e /run/$1.pid ] && pidfile="/run/$1.pid"
    if [ -e $pidfile ]; then
      echo "Killing $1 process $(cat $pidfile) from $pidfile."
      kill "$(cat $pidfile)" || :
      # It is possible for the process to remove it's own pid, so check again before removing.
      [ -e $pidfile ] && rm $pidfile || :
    else
      echo "Warning: Not killing process $1, pidfile not found."
    fi
  fi
}

start() {

  [ "$BACKEND" = "BIND9_DLZ" ] && start_service named
  start_service samba
}

stop() {

  stop_service samba
  [ "$BACKEND" = "BIND9_DLZ" ] && stop_service named
}

restart() {

  stop
  sleep 2s
  start
}

shutdown() {

  stop
  # If running in init send kill signal to init process.
  if [ "$SYSINIT" = "true" ]; then
    [ "$ID"  = "alpine" ] && initsys="OpenRC"
    echo "Sending kill signal to ${initsys:-systemd}." >>/var/lib/samba/samba-startup.log
    sleep 2s
    sig="RTMIN+3"
    [ "$ID"  = "alpine" ] && sig="INT"
    kill -s $sig 1
  fi
  echo "Shutdown complete." >>/var/lib/samba/samba-startup.log
  exit 0
}

# Get ID var.
. /etc/os-release

# Determine the bind user and group.
BIND_USER="named"
[ -n "$(id bind 2>/dev/null || :)" ] && BIND_USER="bind"
BIND_GROUP="$(id $BIND_USER -gn)"

# Load persistent user settings ($SAMBAOPTIONS and $NAMEDOPTIONS).
[ -r /var/lib/samba/samba-vars ] && . /var/lib/samba/samba-vars 

# Determine if running under init system (systemd or openRC).
INITPROC="$(ps aux | egrep '([ ]*[ ]1[ ]*root|root.*[ ]1[ ])')"
SYSINIT="false"
[ -n "$(echo $INITPROC | grep /sbin/init )" ] && SYSINIT="true"
[ -n "$(echo $INITPROC | grep /lib/systemd/systemd )" ] && SYSINIT="true"
if [ "$SYSINIT" = "true" ]; then
  echo "Running under systemd or openRC."
  # Running under init process so the config files must be updated with the proper settings.
  set_service_options
else
  echo "Running without systemd or openRC."
  # Fedora named needs this export.
  [ "$ID" = "fedora" ] && export KRB5RCACHETYPE="none"
  # winbindd needs this when running without init system.
  mkdir -p /run/samba/winbindd
  # Create named run directory and set proper ownership.
  mkdir -p /run/named
  chown $BIND_USER:$BIND_GROUP /run/named
fi

# Determine the dns backend (SAMBA_INTERNAL or BIND9_DLZ).
BACKEND="$(cat /var/lib/samba/backend 2>/dev/null || :)"

