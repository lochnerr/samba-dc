#!/bin/sh

# samba-start - Provision and/or start samba domain controller.

set -e

# Note: This is also used by samba provisioning.
fixup_smb_config() {
  if [ "$BACKEND" = "BIND9_DLZ" ]; then
    # BIND9_DLZ, disable samba dns service.
    sed -i \
      -e "s:, dns$::" \
      -e "s:[^#]dns forwarder:\t#dns forwarder:" \
      /etc/samba/smb.conf
  else
    # SAMBA_INTERNAL, enable samba dns service.
    sed -i \
      -e "s:dnsupdate$:dnsupdate, dns:" \
      -e "s:#dns forwarder:dns forwarder:" \
      /etc/samba/smb.conf
    # samba_upgradedns deletes the dns user when changing to SAMBA_INTERNAL and creates a
    # new user when upgrading to BIND9_DLZ.  So, delete obsolete keytab if upgrading to SAMBA_INTERNAL.
    # A new one will be created if the domain is upgraded later back to BIND9_DLZ.
    if [ -e $PRIVATE_DIR/dns.keytab ]; then
      echo "Deleting obsolete dns.keytab file."
      rm $PRIVATE_DIR/dns.keytab
    fi
  fi
}

setup_bind_links() {

  echo "Bind Version:  $(named -v)"

  # Determine the named user (Linux distros use different ones).
  NAMED_USER="named"
  [ -n "$(id bind 2>/dev/null || true)" ] && NAMED_USER="bind"
  NAMED_GROUP="$(id $NAMED_USER -gn)"

  STATEDIR="$(smbd -b | grep STATEDIR | awk '{print $2}')"
  BINDDNS_DIR="$(smbd -b | grep BINDDNS_DIR | awk -F ' ' '{ print $2 }')"
  # Some older versions of smbd do not define a BINDDNS_DIR path, so use PRIVATE_DIR instead.
  [ -z "${BINDDNS_DIR}" ] && BINDDNS_DIR="$(smbd -b | grep PRIVATE_DIR | awk '{print $2}')"

  # Create a persistent named directory.
  if [ ! -d ${STATEDIR}/named ]; then
    echo "Creating persistent named directory in ${STATEDIR}."
    mkdir -p ${STATEDIR}/named
    [ -e /var/named ] && cp -a /var/named/. ${STATEDIR}/named
    [ -e /var/bind ]  && cp -a /var/bind/.  ${STATEDIR}/named
    chown $NAMED_USER:$NAMED_GROUP ${STATEDIR}/named
  fi

  # Link /var/named to the persistent directory.
  if [ ! -L "/var/named" ]; then
    echo "Linking /var/named to the persistent directory."
    [ -d /var/named ] && mv /var/named /var/named-bak
    ln -s ${STATEDIR}/named /var/named
  else
    # This will happen if the container is (re)started without being removed first (e.g. docker-compose up).
    echo "/var/named already linked."
  fi
}

# Start

# Utils provide start_service and restart functions.
. samba-utils

if [ -e /sbin/apk ]; then
  if [ "$SYSINIT" != "true" ]; then
    echo "Starting busybox syslog in Alpine."
    syslogd
  fi
  echo "Forcing backend to SAMBA_INTERNAL for Alpine Linux."
  BACKEND="SAMBA_INTERNAL"
fi

. samba-set-vars
set_samba_vars

mkdir -p /run/samba/winbindd

# Create a persistent config directory.
if [ ! -d ${STATEDIR}/config ]; then
  echo "Creating persistent config directory in ${STATEDIR}."
  mkdir -p ${STATEDIR}/config
  cp -a /etc/samba/. ${STATEDIR}/config
fi

# Link /etc/samba to the persistent config directory.
if [ ! -L "/etc/samba" ]; then
  echo "Linking /etc/samba to the persistent config directory."
  [ -d /etc/samba ] && mv /etc/samba /etc/samba-bak
  ln -s ${STATEDIR}/config /etc/samba
else
  # This will happen if the container is (re)started without being removed first (e.g. docker-compose up).
  echo "/etc/samba already linked."
fi

# Set the local timezone.
if [ -n "$TIMEZONE" ]; then
  if [ -e /usr/share/zoneinfo/$TIMEZONE ]; then
    echo "Setting timezone to ${TIMEZONE}."
    ln -fs /usr/share/zoneinfo/$TIMEZONE /etc/localtime
  else
    echo "Timezone ${TIMEZONE} not found, not changing timezone."
  fi
fi

# The following are the configuration steps as described in
# https://wiki.samba.org/index.php/Setting_up_Samba_as_an_Active_Directory_Domain_Controller

# Step 1: Introduction --- Nothing to do.

# Step 2: Preparing the Installation

# Update the hosts file.
cat > /etc/hosts <<-__EOF__
	127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
	::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
	$HOST_IP    ${HOST_NAME}.$DOMAIN ${HOST_NAME}
	__EOF__

# Step 3: Installing Samba --- Not needed, already installed.

# Step 4: Provisioning a Samba Active Directory
# Step 4.1: Parameter Explanation --- Nothing to do.
# Step 4.2: Provisioning Samba AD in Interactive Mode --- Not doing interactive install.

# Step 4.3: Provisioning Samba AD in Non-interactive Mode
if [ ! -f $PRIVATE_DIR/krb5.conf ]; then
  # The krb5.conf file does not exist (it is created by samba-tool domain provision/join) so provisioning is needed.
  . samba-provisioning
  provision
  # Create a bind config even if using SAMBA_INTERNAL backend.
  # This will allow switching to BIND9_DLZ at a later time.
  setup_bind_links
  provision_bind
  PROVISIONED="true"
fi

# Step 8 (Out of order from docs): Configuring Kerberos
# This needs to be done before doing a samba_upgradedns.

cp -a $PRIVATE_DIR/krb5.conf /etc/

# Step 5: Setting up the AD DNS back end

# If the dns backend has changed, a samba dns upgrade is required.
if [ "$BACKEND" != "$(cat /var/lib/samba/backend  || true)" ]; then
  echo "DNS backend changed to: ${BACKEND}."
  fixup_smb_config
  samba_upgradedns --dns-backend=$BACKEND
  echo "$BACKEND" >/var/lib/samba/backend
fi

# If using bind backend, start bind.
if [ "$BACKEND" = "BIND9_DLZ" ]; then

  [ -z "$NAMED_GROUP" ] && setup_bind_links

  # Make sure the krb5 config is readable by named.
  chown root:$NAMED_GROUP /etc/krb5.conf

  # Make sure the samba dlz config is readable by named.
  chown root:${NAMED_GROUP} ${BINDDNS_DIR}/named.conf

  # Note: samba-tool join does not properly set ownership for ${BINDDNS_DIR}.
  chown root:$NAMED_GROUP ${BINDDNS_DIR}

  # Copy the config and the rndc key files to the proper directory.
  ETCNAMED="/etc/bind"
  [ "$ID" = "fedora" ] && ETCNAMED="/etc"
  cp -a /var/named/named.conf $ETCNAMED/
  cp -a /var/named/rndc.key   $ETCNAMED/

  echo "Running 'named-checkconf'."
  named-checkconf

  start_service named

  # Wait for named to fully start.
  sleep 3s

  # Verify named is responding to queries.
  if ! host -t A localhost $HOST_IP ; then
    echo "WARNING: named is not responding."
  fi
fi

# Step 6: Configuring the DNS Resolver

# Update the resolv.conf file.
cat > /etc/resolv.conf <<-__EOF__
	search $DOMAIN
	nameserver ${HOST_IP}
	__EOF__

start_service samba

# Step 7: Create a reverse zone --- This is done in post-provisioning.
if [ "$PROVISIONED" = "true" ]; then
  # Wait for samba to fully start.
  sleep 3s
  post_provisioning
  if [ "$BACKEND" = "BIND9_DLZ" ]; then
    # For some reason nsupdates do not work without a restart.
    restart
  fi
fi

# Step 9: Testing your Samba AD DC
if [ "$(echo $RUN_TESTS | tr [a-z] [A-Z])" = "TRUE" ]; then
  # Wait for samba and bind to fully come up.
  sleep 5s
  . samba-tests
  test_samba
  test_stats
fi

exit 0

