#!/bin/sh

# samba-start - Provision and/or start samba domain controller.

set -e

fixup_backend_config() {
  # Enable or disable the dns backend in smb.conf depending on the backend in use.
  if [ "$BACKEND" = "BIND9_DLZ" ]; then
    # BIND9_DLZ, disable samba dns service.
    sed -i \
      -e "s:, dns$::" \
      -e "s:[^#]dns forwarder:\t#dns forwarder:" \
      /etc/samba/smb.conf
  else
    # SAMBA_INTERNAL, enable samba dns service.
    sed -i \
      -e "s:dnsupdate$:dnsupdate, dns:" \
      -e "s:#dns forwarder:dns forwarder:" \
      /etc/samba/smb.conf
    # samba_upgradedns deletes the dns user when changing to SAMBA_INTERNAL and creates a
    # new user when upgrading to BIND9_DLZ.  So, delete obsolete keytab if upgrading to SAMBA_INTERNAL.
    # A new one will be created if the domain is upgraded later back to BIND9_DLZ.
    if [ -e $PRIVATE_DIR/dns.keytab ]; then
      echo "Deleting obsolete dns.keytab file."
      rm $PRIVATE_DIR/dns.keytab
    fi
  fi
}

# Start

# Indicates to system unit test that the server is starting.
echo "Starting" > /var/lib/samba/samba-status

# Utils provide start_service and restart functions.
. samba-utils

if [ -e /sbin/apk ]; then
  if [ "$SYSINIT" != "true" ]; then
    echo "Starting busybox syslog in Alpine."
    syslogd
  fi
fi

. samba-set-vars
set_samba_vars

# Set the local timezone.
if [ -n "$TIMEZONE" ]; then
  if [ -e /usr/share/zoneinfo/$TIMEZONE ]; then
    echo "Setting timezone to ${TIMEZONE}."
    ln -fs /usr/share/zoneinfo/$TIMEZONE /etc/localtime
  else
    echo "Timezone ${TIMEZONE} not found, not changing timezone."
  fi
fi

# The following are the configuration steps as described in
# https://wiki.samba.org/index.php/Setting_up_Samba_as_an_Active_Directory_Domain_Controller

# Step 1: Introduction --- Nothing to do.

# Step 2: Preparing the Installation

# Update the hosts file.  A persistent hosts file is created in the provisioning process.
[ -e $PRIVATE_DIR/hosts ] && cat $PRIVATE_DIR/hosts > /etc/hosts

# Step 3: Installing Samba --- Not needed, already installed.

# Step 4: Provisioning a Samba Active Directory
# Step 4.1: Parameter Explanation --- Nothing to do.
# Step 4.2: Provisioning Samba AD in Interactive Mode --- Not doing interactive install.

# Step 4.3: Provisioning Samba AD in Non-interactive Mode
if [ ! -f $PRIVATE_DIR/krb5.conf ]; then
  # The krb5.conf file does not exist (it is created by samba-tool domain provision/join) so provisioning is needed.
  . samba-provisioning
  provision
  fixup_backend_config
  # Create a bind config even if using SAMBA_INTERNAL backend.
  # This will allow switching to BIND9_DLZ at a later time.
  provision_bind
  PROVISIONED="true"
fi

# Step 8 (Out of order from docs): Configuring Kerberos
# This needs to be done before doing a samba_upgradedns.

cp -a $PRIVATE_DIR/krb5.conf /etc/

# Step 5: Setting up the AD DNS back end

# If the dns backend has changed, a samba dns upgrade is required.
if [ "$BACKEND" != "$(cat /var/lib/samba/backend  || true)" ]; then
  echo "DNS backend changed to: ${BACKEND}."
  fixup_backend_config
  samba_upgradedns --dns-backend=$BACKEND
  echo "$BACKEND" >/var/lib/samba/backend
fi

# If using bind backend, start bind.
if [ "$BACKEND" = "BIND9_DLZ" ]; then

  # Copy the config and the rndc key files to the proper directory.
  ETCNAMED="/etc/bind"
  [ ! -d /etc/bind ] && ETCNAMED="/etc"
  cp -a /var/named/named.conf $ETCNAMED/
  cp -a /var/named/rndc.key   $ETCNAMED/

  echo "Running 'named-checkconf'."
  named-checkconf

  start_service named

  # Wait for named to fully start.
  sleep 3s

  # Verify named is responding to queries.
  if ! host -t A localhost 127.0.0.1 ; then
    echo "WARNING: named is not responding."
  fi
fi

# Step 6: Configuring the DNS Resolver

# Update the resolv.conf file.  A persistent resolv.conf file is created in the provisioning process.
[ -e $PRIVATE_DIR/resolv.conf ] && cat $PRIVATE_DIR/resolv.conf > /etc/resolv.conf

start_service samba

# Step 7: Create a reverse zone --- This is done in post-provisioning.
if [ "$PROVISIONED" = "true" ]; then
  # Wait for samba to fully start.
  sleep 3s
  post_provisioning
  if [ "$BACKEND" = "BIND9_DLZ" ]; then
    # For some reason nsupdates do not work without a restart.
    restart
  fi
fi

# Step 9: Testing your Samba AD DC
if [ "$(echo $RUN_TESTS | tr [a-z] [A-Z])" = "TRUE" ]; then
  # Wait for samba and bind to fully come up.
  sleep 5s
  . samba-tests
  test_samba
  test_stats
fi

# Indicates to system unit test that the server is ready.
echo "Setting status to Running." >>/var/lib/samba/samba-startup.log
echo "Running" > /var/lib/samba/samba-status

exit 0

